/*Atomic Bulldog kss theme version 1.0.0*/
/*Min and Max mixins*/
@import url("https://fonts.googleapis.com/css?family=Open+Sans:400,700");
/*! modern-normalize | MIT License | https://github.com/sindresorhus/modern-normalize */
/* Document
   ========================================================================== */
/**
 * Use a better box model (opinionated).
 */
html {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

*,
*::before,
*::after {
  -webkit-box-sizing: inherit;
          box-sizing: inherit;
}

/**
 * Use a more readable tab size (opinionated).
 */
:root {
  -moz-tab-size: 4;
  -o-tab-size: 4;
     tab-size: 4;
}

/**
 * Correct the line height in all browsers.
 */
html {
  line-height: 1.15;
}

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0;
}

/**
 * Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)
 */
body {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */
/**
 * Add the correct height in Firefox.
 */
hr {
  height: 0;
}

/* Text-level semantics
   ========================================================================== */
/**
 * Add the correct text decoration in Chrome, Edge, and Safari.
 */
abbr[title] {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}

/**
 * 1. Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp,
pre {
  font-family: SFMono-Regular, Consolas, 'Liberation Mono', Menlo, Courier, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */
}

/**
 * Remove the inheritance of text transform in Edge and Firefox.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none;
}

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type='button'],
[type='reset'],
[type='submit'] {
  -webkit-appearance: button;
}

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type='button']::-moz-focus-inner,
[type='reset']::-moz-focus-inner,
[type='submit']::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type='button']:-moz-focusring,
[type='reset']:-moz-focusring,
[type='submit']:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  padding: 0;
}

/**
 * Add the correct vertical alignment in Chrome and Firefox.
 */
progress {
  vertical-align: baseline;
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type='number']::-webkit-inner-spin-button,
[type='number']::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type='search']::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Chrome and Safari.
 */
summary {
  display: list-item;
}

.kss-container {
  padding-right: 1rem;
  padding-left: 1rem;
}

.kss-container:not(.is-fluid) {
  margin: 0 auto;
}

@media only screen and (min-width: 37.5em) {
  .kss-container:not(.is-fluid) {
    width: 570px;
  }
}

@media only screen and (min-width: 56.25em) {
  .kss-container:not(.is-fluid) {
    width: 860px;
  }
}

@media only screen and (min-width: 75em) {
  .kss-container:not(.is-fluid) {
    width: 820px;
  }
}

@media only screen and (min-width: 112.5em) {
  .kss-container:not(.is-fluid) {
    width: 1150px;
  }
}

.kss-brand {
  text-align: center;
}

.kss-brand p {
  color: #f2f2f2;
  font-size: 1.5rem;
  line-height: 1.1;
  margin-bottom: 1.25rem;
}

.kss-brand img {
  height: auto;
  max-width: 100%;
}

.kss-btn {
  border: 1px solid #6e6e6e;
  color: #6e6e6e;
  background-color: transparent;
  padding: 0.2rem 0.5rem;
  line-height: 1;
  display: inline-block;
}

.kss-btn:hover {
  color: #545454;
  text-decoration: underline;
}

.kss-burger-container {
  position: fixed;
  top: 0;
  right: 0;
  z-index: 20;
}

@media only screen and (min-width: 75em) {
  .kss-burger-container {
    display: none;
  }
}

.kss-burger-container:after {
  content: "";
  border-style: solid;
  border-width: 0 800px 320px 0;
  border-color: transparent #108fea transparent transparent;
  position: absolute;
  left: 0;
  bottom: -320px;
}

button.kss-burger {
  border: none;
  background: transparent;
  position: relative;
  cursor: pointer;
  color: white;
  background-color: #108fea;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  padding: 0.5rem 1.25rem;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

button.kss-burger span.burger-icon {
  display: block;
  width: 25px;
  height: 20px;
  -webkit-backface-visibility: hidden;
  -webkit-transform: translateZ(0) scale(1, 1);
}

button.kss-burger span.burger-icon:after, button.kss-burger span.burger-icon:before,
button.kss-burger span.burger-icon span {
  width: 100%;
  height: 2px;
  border-radius: 100px;
  position: absolute;
  left: 0px;
  background: white;
  -webkit-transform: rotate(0deg);
          transform: rotate(0deg);
  -webkit-transition: all 0.4s;
  transition: all 0.4s;
}

button.kss-burger span.burger-icon:after, button.kss-burger span.burger-icon:before {
  content: "";
}

button.kss-burger span.burger-icon:after {
  top: 0px;
  margin-top: 0px;
}

button.kss-burger span.burger-icon:before {
  bottom: 0px;
  margin-bottom: 0px;
}

button.kss-burger span.burger-icon span {
  top: 50%;
}

button.kss-burger.is-active span.burger-icon:after {
  -webkit-transform: rotate(135deg) translate(7px, -7px);
          transform: rotate(135deg) translate(7px, -7px);
}

button.kss-burger.is-active span.burger-icon:before {
  -webkit-transform: rotate(225deg);
          transform: rotate(225deg);
  bottom: 50%;
  margin-bottom: -2px;
}

button.kss-burger.is-active span.burger-icon span {
  -webkit-transform: rotate(135deg);
          transform: rotate(135deg);
}

.kss-h1 {
  color: black;
  font-family: "Open Sans", "Helvetica Neue", Arial, sans-serif;
  font-size: 2.8125rem;
  margin-bottom: 0.25rem;
  text-align: left;
}

.kss-h2 {
  color: black;
  font-family: "Open Sans", "Helvetica Neue", Arial, sans-serif;
  font-size: 2rem;
  margin-bottom: 0.25rem;
  text-align: left;
}

.kss-h3 {
  color: black;
  font-family: "Open Sans", "Helvetica Neue", Arial, sans-serif;
  font-size: 1.5rem;
  margin-bottom: 0.25rem;
  text-align: left;
}

.kss-h4 {
  color: black;
  font-family: "Open Sans", "Helvetica Neue", Arial, sans-serif;
  font-size: 1.25rem;
  margin-bottom: 0.25rem;
  text-align: left;
}

.kss-h5 {
  color: black;
  font-family: "Open Sans", "Helvetica Neue", Arial, sans-serif;
  font-size: 1.15rem;
  margin-bottom: 0.25rem;
  text-align: left;
}

.kss-h6 {
  color: black;
  font-family: "Open Sans", "Helvetica Neue", Arial, sans-serif;
  font-size: 1rem;
  margin-bottom: 0.25rem;
  text-align: left;
}

.kss-h1,
.kss-h2 {
  margin-top: 0;
  padding-top: 9rem;
}

.kss-h3,
.kss-h4 {
  margin-top: 3rem;
}

.kss-h5,
.kss-h6 {
  margin-top: 1.25rem;
}

.kss-h1 .kss-section__ref {
  color: #108fea;
}

.kss-is-no-scroll {
  overflow: hidden;
}

.kss-navigation ul.kss-nav {
  list-style-type: none;
  margin: 0;
  padding: 0;
}

.kss-navigation ul.kss-nav ul.kss-subnav {
  list-style-type: none;
  padding-left: 0.5rem;
  margin-bottom: 1rem;
}

.kss-navigation ul.kss-nav ul.kss-subnav .kss-nav-link {
  padding: 0.25rem;
}

.kss-navigation ul.kss-nav ul.kss-subnav li.is-grandchild {
  padding-left: 0.5rem;
}

.kss-navigation .kss-nav-link {
  color: #f2f2f2;
  text-decoration: none;
  padding: 0.5rem;
  display: block;
  width: 100%;
}

.kss-navigation .kss-nav-link:hover, .kss-navigation .kss-nav-link:focus {
  background-color: #3b3b3b;
  outline-color: transparent;
  border-color: transparent;
  -webkit-box-shadow: 0 0 0 transparent;
          box-shadow: 0 0 0 transparent;
}

.kss-navigation .kss-nav-link.is-active {
  background-color: black;
}

.kss-navigation .kss-nav-link.is-active:hover, .kss-navigation .kss-nav-link.is-active:focus {
  background-color: black;
}

.kss-navigation .kss-nav-link .kss-nav__ref {
  font-size: calc(1rem - 0.15rem);
}

.kss-search {
  position: relative;
  margin-bottom: 1rem;
}

.kss-search #kss-search__input {
  display: block;
  border: 1px solid #8a8a8a;
  padding: 0.5rem;
  color: #545454;
  -webkit-transition: border-color 0.3s ease-in-out;
  transition: border-color 0.3s ease-in-out;
  outline: none;
  width: 100%;
}

.kss-search #kss-search__input:hover, .kss-search #kss-search__input:focus {
  border-color: #545454;
}

.kss-search #kss-search__list {
  list-style-type: none;
  padding: 0;
  margin: 0;
  max-height: 250px;
  overflow-y: auto;
  padding: 0.5rem;
  background-color: white;
  border: 1px solid #8a8a8a;
  border-top: 0;
  display: none;
}

.kss-search #kss-search__list a {
  color: #545454;
  width: 100%;
}

.kss-search #kss-search__list a:hover, .kss-search #kss-search__list a:focus {
  color: #545454;
  text-decoration: underline;
}

.kss-sidebar {
  height: 100vh;
  padding: 1rem;
  background-color: #212121;
  overflow-y: auto;
  position: -webkit-sticky;
  position: sticky;
  top: 0;
  z-index: 10;
  display: none;
}

.kss-sidebar.is-active {
  display: block;
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  padding: 3rem 1rem;
}

@media only screen and (min-width: 75em) {
  .kss-sidebar {
    display: block;
  }
  .kss-sidebar.is-active {
    position: relative;
    top: auto;
    left: auto;
    width: 100%;
    padding: 1rem;
  }
}

.kss-section__permalink:hover, .kss-section__permalink:focus {
  color: #108fea;
  text-decoration: underline;
}

.kss-section__source {
  color: #6e6e6e;
  font-size: calc(1rem - 0.1rem);
}

.kss-section__description {
  margin-top: 1rem;
  margin-bottom: 1rem;
}

.kss-section__description p {
  color: black;
  font-family: "Open Sans", "Helvetica Neue", Arial, sans-serif;
  font-size: 1rem;
}

.kss-section__description a {
  color: #108fea;
}

.kss-section__description a:hover, .kss-section__description a:focus {
  color: #108fea;
  text-decoration: underline;
}

.kss-section__description code {
  background-color: #bfbfbf;
  border-radius: 5px;
  padding-left: 0.25rem;
  padding-right: 0.25rem;
}

.kss-section__description blockquote {
  background-color: #f2f2f2;
  padding: 1rem;
  border-left: 0.5rem solid #bfbfbf;
  margin-bottom: 1rem;
}

.kss-section__description .kss-iframe {
  width: 100%;
  height: 500px;
}

.kss-section__example-container {
  border-radius: 5px;
  border: 3px solid #bfbfbf;
}

.kss-section__example-container pre[class*="language-"] {
  margin: 0;
}

.kss-section__example-container code[class*="language-"],
.kss-section__example-container pre[class*="language-"] {
  background-color: #bfbfbf;
  /* Works in Safari */
}

.kss-section__example-container code[class*="language-"] ::-moz-selection,
.kss-section__example-container pre[class*="language-"] ::-moz-selection {
  background-color: #108fea;
  color: black;
}

.kss-section__example-container code[class*="language-"] ::selection,
.kss-section__example-container pre[class*="language-"] ::selection {
  background-color: #108fea;
  color: black;
}

.kss-section__example-container .kss-section__examples {
  padding: 1rem;
  overflow-x: auto;
}

.kss-section__example-container .kss-section__examples .kss-modifiers__heading {
  font-size: 1.5rem;
}

.kss-section__example-container .kss-section__examples code.kss-modifiers__name {
  background-color: #bfbfbf;
  border-radius: 5px;
  padding-left: 0.25rem;
  padding-right: 0.25rem;
  margin-top: 1.5rem;
}

.kss-section__example-container .kss-section__examples .kss-modifiers__example {
  margin-top: 1rem;
  margin-bottom: 3rem;
  position: relative;
}

.kss-section__example-container .kss-section__examples .kss-modifiers__example:last-child {
  margin-bottom: 0;
}

.kss-section__example-container .kss-section__examples .kss-box {
  background: #212121;
  color: #f2f2f2;
  padding: 1rem;
  width: 100%;
  height: 100%;
}

#kss-map-colors .kss-color-item {
  display: grid;
  grid-gap: 1rem;
  grid-template-columns: repeat(2, 1fr);
  margin-bottom: 1rem;
  padding: 1rem;
  border: 1px solid #CCCCCC;
  background-color: #f5f5f5;
}

@media (min-width: 1025px) {
  #kss-map-colors .kss-color-item {
    grid-template-columns: repeat(3, 1fr);
  }
}

#kss-map-colors .kss-color-item .kss-color-item-child {
  padding: 4px;
  padding-top: 80px;
  border: 1px solid #CCCCCC;
}

#kss-map-colors .kss-color-item .kss-color-item-child:first-child {
  grid-column: span 2;
}

@media (min-width: 1025px) {
  #kss-map-colors .kss-color-item .kss-color-item-child:first-child {
    grid-column: auto;
    grid-row: span 2;
  }
}

#kss-map-colors .kss-color-item .kss-color-item-child .kss-color-item-legend {
  padding: 0.5rem 1rem;
  background-color: #ffffff;
  height: 100%;
}

#kss-map-colors .kss-color-item .kss-color-item-child .kss-color-item-legend p:nth-last-child(1) {
  margin-bottom: 0;
}

#kss-map-colors .kss-color-item .kss-color-item-child .kss-color-item-legend p:first-child {
  font-weight: bold;
}

.kss-markdown {
  margin-top: 9rem;
}

.kss-markdown h1 {
  color: black;
  font-family: "Open Sans", "Helvetica Neue", Arial, sans-serif;
  font-size: 2.8125rem;
  margin-bottom: 0.25rem;
}

.kss-markdown h2 {
  color: black;
  font-family: "Open Sans", "Helvetica Neue", Arial, sans-serif;
  font-size: 2rem;
  margin-bottom: 0.25rem;
}

.kss-markdown h3 {
  color: black;
  font-family: "Open Sans", "Helvetica Neue", Arial, sans-serif;
  font-size: 1.5rem;
  margin-bottom: 0.25rem;
}

.kss-markdown h4 {
  color: black;
  font-family: "Open Sans", "Helvetica Neue", Arial, sans-serif;
  font-size: 1.25rem;
  margin-bottom: 0.25rem;
}

.kss-markdown h5 {
  color: black;
  font-family: "Open Sans", "Helvetica Neue", Arial, sans-serif;
  font-size: 1.15rem;
  margin-bottom: 0.25rem;
}

.kss-markdown h6 {
  color: black;
  font-family: "Open Sans", "Helvetica Neue", Arial, sans-serif;
  font-size: 1rem;
  margin-bottom: 0.25rem;
}

.kss-markdown h1,
.kss-markdown h2 {
  margin-top: 9rem;
}

.kss-markdown h3,
.kss-markdown h4 {
  margin-top: 3rem;
}

.kss-markdown h5,
.kss-markdown h6 {
  margin-top: 1.25rem;
}

.kss-markdown a {
  color: #108fea;
}

.kss-markdown a:hover, .kss-markdown a:focus {
  color: #108fea;
  text-decoration: underline;
}

.kss-markdown code {
  background-color: #bfbfbf;
  border-radius: 5px;
  padding-left: 0.25rem;
  padding-right: 0.25rem;
}

.kss-markdown blockquote {
  background-color: #f2f2f2;
  padding: 1rem;
  border-left: 0.5rem solid #bfbfbf;
  margin-bottom: 1rem;
}

.kss-markdown p {
  color: black;
  font-family: "Open Sans", "Helvetica Neue", Arial, sans-serif;
  font-size: 1rem;
}

.kss-markdown img {
  height: auto;
  max-width: 100%;
}

.kss-markdown pre {
  margin: 0;
  padding: 1rem;
  border-radius: 5px;
}

.kss-markdown pre code,
.kss-markdown pre {
  background-color: #bfbfbf;
}

body {
  background-color: #f2f2f2;
}

@supports (display: grid) {
  @media only screen and (min-width: 75em) {
    .kss-page-container:not(.kss-is-full-width) {
      display: grid;
      grid-template-columns: 320px 1fr;
      grid-template-areas: "sidebar main" "sidebar footer";
      grid-gap: 1.25rem;
    }
    .kss-page-container:not(.kss-is-full-width) .kss-sidebar {
      grid-area: sidebar;
    }
    .kss-page-container:not(.kss-is-full-width) .kss-main {
      grid-area: main;
    }
    .kss-page-container:not(.kss-is-full-width) .kss-footer {
      grid-area: footer;
      -ms-flex-item-align: end;
          align-self: end;
    }
  }
}

@supports not (display: grid) {
  @supports (display: flex) {
    @media only screen and (min-width: 75em) {
      .kss-page-container:not(.kss-is-full-width) {
        display: -webkit-box;
        display: -ms-flexbox;
        display: flex;
      }
      .kss-page-container:not(.kss-is-full-width) .kss-sidebar {
        width: 320px;
      }
      .kss-page-container:not(.kss-is-full-width) .kss-main {
        -webkit-box-flex: 1;
            -ms-flex: 1;
                flex: 1;
      }
    }
  }
}

@media only screen and (-ms-high-contrast: active) and (min-width: 75em), only screen and (-ms-high-contrast: none) and (min-width: 75em) {
  .kss-page-container:not(.kss-is-full-width) {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
  }
  .kss-page-container:not(.kss-is-full-width) .kss-sidebar {
    width: 320px;
  }
  .kss-page-container:not(.kss-is-full-width) .kss-main {
    -webkit-box-flex: 1;
        -ms-flex: 1;
            flex: 1;
  }
}

@supports (display: grid) {
  @media only screen and (min-width: 75em) {
    .kss-page-container.kss-is-full-width {
      display: grid;
      grid-template-columns: 1fr;
      grid-template-areas: "main" "sidebar" "footer";
    }
    .kss-page-container.kss-is-full-width .kss-sidebar {
      grid-area: sidebar;
      height: auto;
    }
    .kss-page-container.kss-is-full-width .kss-main {
      grid-area: main;
    }
    .kss-page-container.kss-is-full-width .kss-footer {
      grid-area: footer;
      -ms-flex-item-align: end;
          align-self: end;
    }
  }
}

.kss-page-container.kss-is-full-width .kss-container {
  width: 100vw;
  padding: 0;
}

.kss-page-container.kss-is-full-width .kss-container .kss-section__example-container {
  border-left: 0;
  border-right: 0;
  border-radius: 0;
}

.kss-page-container.kss-is-full-width .kss-container .kss-section__example-container .kss-section__examples {
  padding: 0;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
